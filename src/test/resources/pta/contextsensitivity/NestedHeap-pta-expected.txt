Points-to sets of all variables
[NewObj{<House: void <init>()>[1@L13] new BedRoom}, NewObj{<BedRoom: void <init>()>[1@L25] new Bed}]:<Bed: void <init>()>/%this -> [[NewObj{<House: void <init>()>[1@L13] new BedRoom}]:NewObj{<BedRoom: void <init>()>[1@L25] new Bed}]
[NewObj{<NestedHeap: void main(java.lang.String[])>[0@L3] new House}, NewObj{<House: void <init>()>[1@L13] new BedRoom}]:<BedRoom: void <init>()>/%this -> [[NewObj{<NestedHeap: void main(java.lang.String[])>[0@L3] new House}]:NewObj{<House: void <init>()>[1@L13] new BedRoom}]
[NewObj{<NestedHeap: void main(java.lang.String[])>[0@L3] new House}, NewObj{<House: void <init>()>[1@L13] new BedRoom}]:<BedRoom: void <init>()>/temp$0 -> [[NewObj{<House: void <init>()>[1@L13] new BedRoom}]:NewObj{<BedRoom: void <init>()>[1@L25] new Bed}]
[NewObj{<NestedHeap: void main(java.lang.String[])>[0@L3] new House}]:<House: BedRoom getBedRoom()>/%this -> [[]:NewObj{<NestedHeap: void main(java.lang.String[])>[0@L3] new House}]
[NewObj{<NestedHeap: void main(java.lang.String[])>[0@L3] new House}]:<House: BedRoom getBedRoom()>/temp$0 -> [[NewObj{<NestedHeap: void main(java.lang.String[])>[0@L3] new House}]:NewObj{<House: void <init>()>[1@L13] new BedRoom}]
[NewObj{<NestedHeap: void main(java.lang.String[])>[0@L3] new House}]:<House: void <init>()>/%this -> [[]:NewObj{<NestedHeap: void main(java.lang.String[])>[0@L3] new House}]
[NewObj{<NestedHeap: void main(java.lang.String[])>[0@L3] new House}]:<House: void <init>()>/temp$0 -> [[NewObj{<NestedHeap: void main(java.lang.String[])>[0@L3] new House}]:NewObj{<House: void <init>()>[1@L13] new BedRoom}]
[NewObj{<NestedHeap: void main(java.lang.String[])>[3@L4] new House}, NewObj{<House: void <init>()>[1@L13] new BedRoom}]:<BedRoom: void <init>()>/%this -> [[NewObj{<NestedHeap: void main(java.lang.String[])>[3@L4] new House}]:NewObj{<House: void <init>()>[1@L13] new BedRoom}]
[NewObj{<NestedHeap: void main(java.lang.String[])>[3@L4] new House}, NewObj{<House: void <init>()>[1@L13] new BedRoom}]:<BedRoom: void <init>()>/temp$0 -> [[NewObj{<House: void <init>()>[1@L13] new BedRoom}]:NewObj{<BedRoom: void <init>()>[1@L25] new Bed}]
[NewObj{<NestedHeap: void main(java.lang.String[])>[3@L4] new House}]:<House: void <init>()>/%this -> [[]:NewObj{<NestedHeap: void main(java.lang.String[])>[3@L4] new House}]
[NewObj{<NestedHeap: void main(java.lang.String[])>[3@L4] new House}]:<House: void <init>()>/temp$0 -> [[NewObj{<NestedHeap: void main(java.lang.String[])>[3@L4] new House}]:NewObj{<House: void <init>()>[1@L13] new BedRoom}]
[]:<NestedHeap: void main(java.lang.String[])>/args -> [[]:EntryPointObj{alloc=MethodParam{<NestedHeap: void main(java.lang.String[])>/0},type=java.lang.String[] in <NestedHeap: void main(java.lang.String[])>}]
[]:<NestedHeap: void main(java.lang.String[])>/bed -> [[NewObj{<House: void <init>()>[1@L13] new BedRoom}]:NewObj{<BedRoom: void <init>()>[1@L25] new Bed}]
[]:<NestedHeap: void main(java.lang.String[])>/house1 -> [[]:NewObj{<NestedHeap: void main(java.lang.String[])>[0@L3] new House}]
[]:<NestedHeap: void main(java.lang.String[])>/house2 -> [[]:NewObj{<NestedHeap: void main(java.lang.String[])>[3@L4] new House}]
[]:<NestedHeap: void main(java.lang.String[])>/temp$0 -> [[]:NewObj{<NestedHeap: void main(java.lang.String[])>[0@L3] new House}]
[]:<NestedHeap: void main(java.lang.String[])>/temp$1 -> [[]:NewObj{<NestedHeap: void main(java.lang.String[])>[3@L4] new House}]
[]:<NestedHeap: void main(java.lang.String[])>/temp$2 -> [[NewObj{<NestedHeap: void main(java.lang.String[])>[0@L3] new House}]:NewObj{<House: void <init>()>[1@L13] new BedRoom}]

Points-to sets of all static fields

Points-to sets of all instance fields
[NewObj{<NestedHeap: void main(java.lang.String[])>[0@L3] new House}]:NewObj{<House: void <init>()>[1@L13] new BedRoom}.<BedRoom: Bed bed> -> [[NewObj{<House: void <init>()>[1@L13] new BedRoom}]:NewObj{<BedRoom: void <init>()>[1@L25] new Bed}]
[NewObj{<NestedHeap: void main(java.lang.String[])>[3@L4] new House}]:NewObj{<House: void <init>()>[1@L13] new BedRoom}.<BedRoom: Bed bed> -> [[NewObj{<House: void <init>()>[1@L13] new BedRoom}]:NewObj{<BedRoom: void <init>()>[1@L25] new Bed}]
[]:NewObj{<NestedHeap: void main(java.lang.String[])>[0@L3] new House}.<House: BedRoom bedRoom> -> [[NewObj{<NestedHeap: void main(java.lang.String[])>[0@L3] new House}]:NewObj{<House: void <init>()>[1@L13] new BedRoom}]
[]:NewObj{<NestedHeap: void main(java.lang.String[])>[3@L4] new House}.<House: BedRoom bedRoom> -> [[NewObj{<NestedHeap: void main(java.lang.String[])>[3@L4] new House}]:NewObj{<House: void <init>()>[1@L13] new BedRoom}]

Points-to sets of all array indexes
[]:EntryPointObj{alloc=MethodParam{<NestedHeap: void main(java.lang.String[])>/0},type=java.lang.String[] in <NestedHeap: void main(java.lang.String[])>}[*] -> [[]:EntryPointObj{alloc=MethodParam{<NestedHeap: void main(java.lang.String[])>/0}[*],type=java.lang.String in <NestedHeap: void main(java.lang.String[])>}]

