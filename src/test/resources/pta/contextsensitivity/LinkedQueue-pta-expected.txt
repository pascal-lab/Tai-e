Points-to sets of all variables
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}, NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]:<Node: void <init>()>/%this -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: Fact dequeue()>/%this -> [[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: Fact dequeue()>/item -> [[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[6@L95] new Fact}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: Fact dequeue()>/temp$1 -> []
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: Fact dequeue()>/temp$2 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: Fact dequeue()>/temp$3 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: Fact dequeue()>/temp$4 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: Fact dequeue()>/temp$8 -> []
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean check()>/%this -> [[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean check()>/lastNode -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean check()>/temp$11 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean check()>/temp$12 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean check()>/temp$14 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean check()>/temp$15 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean check()>/temp$17 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean check()>/temp$18 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean check()>/temp$20 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean check()>/temp$21 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean check()>/temp$23 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean check()>/temp$24 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean check()>/temp$26 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean check()>/temp$27 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean check()>/temp$3 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean check()>/temp$32 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean check()>/temp$35 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean check()>/temp$36 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean check()>/temp$37 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean check()>/temp$5 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean check()>/temp$8 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean check()>/temp$9 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean check()>/x -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean isEmpty()>/%this -> [[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: boolean isEmpty()>/temp$0 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: void <init>()>/%this -> [[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: void <init>()>/temp$0 -> []
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: void <init>()>/temp$1 -> []
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: void enqueue(Fact)>/%this -> [[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: void enqueue(Fact)>/item -> [[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[6@L95] new Fact}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: void enqueue(Fact)>/oldlast -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: void enqueue(Fact)>/temp$0 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: void enqueue(Fact)>/temp$1 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: void enqueue(Fact)>/temp$2 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: void enqueue(Fact)>/temp$3 -> []
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: void enqueue(Fact)>/temp$5 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:<LinkedQueue: void enqueue(Fact)>/temp$6 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}, NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]:<Node: void <init>()>/%this -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:<LinkedQueue: boolean isEmpty()>/%this -> [[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:<LinkedQueue: boolean isEmpty()>/temp$0 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:<LinkedQueue: void <init>()>/%this -> [[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:<LinkedQueue: void <init>()>/temp$0 -> []
[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:<LinkedQueue: void <init>()>/temp$1 -> []
[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:<LinkedQueue: void enqueue(Fact)>/%this -> [[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:<LinkedQueue: void enqueue(Fact)>/item -> [[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[9@L96] new Fact}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:<LinkedQueue: void enqueue(Fact)>/oldlast -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:<LinkedQueue: void enqueue(Fact)>/temp$0 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:<LinkedQueue: void enqueue(Fact)>/temp$1 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:<LinkedQueue: void enqueue(Fact)>/temp$2 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:<LinkedQueue: void enqueue(Fact)>/temp$3 -> []
[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:<LinkedQueue: void enqueue(Fact)>/temp$5 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:<LinkedQueue: void enqueue(Fact)>/temp$6 -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[6@L95] new Fact}]:<Fact: void <init>()>/%this -> [[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[6@L95] new Fact}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[9@L96] new Fact}]:<Fact: void <init>()>/%this -> [[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[9@L96] new Fact}]
[]:<LinkedQueue: void main(java.lang.String[])>/args -> [[]:EntryPointObj{alloc=MethodParam{<LinkedQueue: void main(java.lang.String[])>/0},type=java.lang.String[] in <LinkedQueue: void main(java.lang.String[])>}]
[]:<LinkedQueue: void main(java.lang.String[])>/q1 -> [[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]
[]:<LinkedQueue: void main(java.lang.String[])>/q2 -> [[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]
[]:<LinkedQueue: void main(java.lang.String[])>/result -> [[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[6@L95] new Fact}]
[]:<LinkedQueue: void main(java.lang.String[])>/temp$0 -> [[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]
[]:<LinkedQueue: void main(java.lang.String[])>/temp$1 -> [[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]
[]:<LinkedQueue: void main(java.lang.String[])>/temp$2 -> [[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[6@L95] new Fact}]
[]:<LinkedQueue: void main(java.lang.String[])>/temp$3 -> [[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[9@L96] new Fact}]
[]:<LinkedQueue: void main(java.lang.String[])>/temp$5 -> [[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[6@L95] new Fact}]

Points-to sets of all static fields

Points-to sets of all instance fields
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}.<Node: Fact item> -> [[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[6@L95] new Fact}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}.<Node: Node next> -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}.<Node: Fact item> -> [[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[9@L96] new Fact}]
[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}.<Node: Node next> -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}.<LinkedQueue: Node first> -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}.<LinkedQueue: Node last> -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L92] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}.<LinkedQueue: Node first> -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]
[]:NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}.<LinkedQueue: Node last> -> [[NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L93] new LinkedQueue}]:NewObj{<LinkedQueue: void enqueue(Fact)>[1@L36] new Node}]

Points-to sets of all array indexes
[]:EntryPointObj{alloc=MethodParam{<LinkedQueue: void main(java.lang.String[])>/0},type=java.lang.String[] in <LinkedQueue: void main(java.lang.String[])>}[*] -> [[]:EntryPointObj{alloc=MethodParam{<LinkedQueue: void main(java.lang.String[])>/0}[*],type=java.lang.String in <LinkedQueue: void main(java.lang.String[])>}]

